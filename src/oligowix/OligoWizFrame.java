package oligowix;


import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.List;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedInputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;

public class OligoWizFrame extends javax.swing.JFrame {
  
    public OligoWizFrame() {
        initComponents();
        MaxTempTextField.setText("100");
        MinTempTextField.setText("50");
        MinOligoTextField1.setText("20");
        MaxOligoTextField.setText("70");
        CPBTextField.setText("0.17");
        CPDBTextField.setText("0.25");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        FASTAfilelabel = new javax.swing.JLabel();
        copypasteseqlabel = new javax.swing.JLabel();
        TextField1 = new javax.swing.JTextField();
        ResultsLabel = new javax.swing.JLabel();
        OKbutton = new javax.swing.JButton();
        ExportButton = new javax.swing.JButton();
        SLabel = new javax.swing.JLabel();
        MaxTempTextField = new javax.swing.JTextField();
        ELabel = new javax.swing.JLabel();
        MinTempTextField = new javax.swing.JTextField();
        HLabel = new javax.swing.JLabel();
        CompScoreTextField = new javax.swing.JTextField();
        URLDisplayTextField = new javax.swing.JTextField();
        RTFButton = new javax.swing.JButton();
        SelOrganTxtField = new javax.swing.JLabel();
        OrganismDropDown = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        ClearTxtButton = new javax.swing.JButton();
        FASTAfilelabel1 = new javax.swing.JLabel();
        SLabel1 = new javax.swing.JLabel();
        MaxOligoTextField = new javax.swing.JTextField();
        ELabel1 = new javax.swing.JLabel();
        MinOligoTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CPBTextField = new javax.swing.JTextField();
        CPDBTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        AAFPURLDisplay = new javax.swing.JTextField();
        AAFPButton = new javax.swing.JButton();
        TextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ResultsTextArea = new javax.swing.JTextArea();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        jMenuItem2.setText("jMenuItem2");

        FASTAfilelabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        FASTAfilelabel.setText("Upload a FASTA file");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OligoWizard");
        getContentPane().setLayout(null);

        copypasteseqlabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        copypasteseqlabel.setText("Copy and Paste sequence:");
        getContentPane().add(copypasteseqlabel);
        copypasteseqlabel.setBounds(20, 70, 180, 20);

        TextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(TextField1);
        TextField1.setBounds(10, 100, 380, 130);

        ResultsLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ResultsLabel.setText("Results");
        getContentPane().add(ResultsLabel);
        ResultsLabel.setBounds(40, 470, 70, 20);

        OKbutton.setText("OK");
        OKbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(OKbutton);
        OKbutton.setBounds(560, 390, 72, 31);

        ExportButton.setText("Export");
        ExportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ExportButton);
        ExportButton.setBounds(660, 660, 100, 30);

        SLabel.setText("Max Temp:");
        getContentPane().add(SLabel);
        SLabel.setBounds(70, 350, 70, 20);

        MaxTempTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaxTempTextFieldActionPerformed(evt);
            }
        });
        MaxTempTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MaxTempTextFieldKeyTyped(evt);
            }
        });
        getContentPane().add(MaxTempTextField);
        MaxTempTextField.setBounds(140, 350, 80, 30);

        ELabel.setText("Min Temp:");
        getContentPane().add(ELabel);
        ELabel.setBounds(70, 310, 60, 20);

        MinTempTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinTempTextFieldActionPerformed(evt);
            }
        });
        MinTempTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MinTempTextFieldKeyTyped(evt);
            }
        });
        getContentPane().add(MinTempTextField);
        MinTempTextField.setBounds(140, 310, 80, 30);

        HLabel.setText("Compatability Score:");
        getContentPane().add(HLabel);
        HLabel.setBounds(50, 660, 140, 20);

        CompScoreTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompScoreTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(CompScoreTextField);
        CompScoreTextField.setBounds(170, 660, 100, 30);

        URLDisplayTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                URLDisplayTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(URLDisplayTextField);
        URLDisplayTextField.setBounds(10, 40, 270, 22);

        RTFButton.setText("Read Text File");
        RTFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RTFButtonActionPerformed(evt);
            }
        });
        getContentPane().add(RTFButton);
        RTFButton.setBounds(290, 40, 130, 20);

        SelOrganTxtField.setText("Select Organism:");
        getContentPane().add(SelOrganTxtField);
        SelOrganTxtField.setBounds(200, 70, 120, 20);

        OrganismDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Human", "Mouse", "E.Coli", "Item 4" }));
        OrganismDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrganismDropDownActionPerformed(evt);
            }
        });
        getContentPane().add(OrganismDropDown);
        OrganismDropDown.setBounds(310, 70, 74, 22);
        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(480, 40, 2, 2);

        jLabel1.setText("Unknown values will be set to default:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 290, 390, 20);

        ClearTxtButton.setText("New");
        ClearTxtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearTxtButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ClearTxtButton);
        ClearTxtButton.setBounds(790, 240, 60, 30);

        FASTAfilelabel1.setBackground(new java.awt.Color(255, 255, 255));
        FASTAfilelabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        FASTAfilelabel1.setText("Upload a FASTA file");
        getContentPane().add(FASTAfilelabel1);
        FASTAfilelabel1.setBounds(10, 10, 169, 25);

        SLabel1.setText("Max Oligo:");
        getContentPane().add(SLabel1);
        SLabel1.setBounds(260, 350, 70, 20);

        MaxOligoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaxOligoTextFieldActionPerformed(evt);
            }
        });
        MaxOligoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MaxOligoTextFieldKeyTyped(evt);
            }
        });
        getContentPane().add(MaxOligoTextField);
        MaxOligoTextField.setBounds(330, 350, 80, 30);

        ELabel1.setText("Min Oligo:");
        getContentPane().add(ELabel1);
        ELabel1.setBounds(260, 310, 60, 20);

        MinOligoTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinOligoTextField1ActionPerformed(evt);
            }
        });
        MinOligoTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MinOligoTextField1KeyTyped(evt);
            }
        });
        getContentPane().add(MinOligoTextField1);
        MinOligoTextField1.setBounds(330, 310, 80, 30);

        jLabel2.setText("\t℃");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(230, 310, 20, 20);

        jLabel3.setText("\t℃");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(230, 350, 40, 30);

        CPBTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPBTextFieldActionPerformed(evt);
            }
        });
        CPBTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CPBTextFieldKeyTyped(evt);
            }
        });
        getContentPane().add(CPBTextField);
        CPBTextField.setBounds(620, 310, 71, 30);

        CPDBTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPDBTextFieldActionPerformed(evt);
            }
        });
        CPDBTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CPDBTextFieldKeyTyped(evt);
            }
        });
        getContentPane().add(CPDBTextField);
        CPDBTextField.setBounds(620, 350, 71, 30);

        jLabel4.setText("Cost Per Base:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(480, 320, 100, 20);

        jLabel5.setText("Cost Per Degenerate Base:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(430, 350, 170, 20);

        jLabel6.setText("Total Cost:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(50, 690, 80, 20);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(170, 690, 100, 30);

        jLabel7.setText("$");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(150, 690, 40, 30);

        jLabel8.setText("$");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(600, 320, 10, 20);

        jLabel9.setText("$");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(600, 350, 20, 20);
        getContentPane().add(AAFPURLDisplay);
        AAFPURLDisplay.setBounds(450, 40, 270, 22);

        AAFPButton.setText("Upload Alternate Amino Acid File");
        AAFPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAFPButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AAFPButton);
        AAFPButton.setBounds(730, 40, 206, 22);
        getContentPane().add(TextField2);
        TextField2.setBounds(480, 100, 390, 130);

        ResultsTextArea.setColumns(20);
        ResultsTextArea.setRows(5);
        jScrollPane2.setViewportView(ResultsTextArea);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(40, 490, 720, 160);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKbuttonActionPerformed
        int MinTemp = Integer.parseInt(MinTempTextField.getText());
        int MaxTemp = Integer.parseInt(MaxTempTextField.getText());
        int MinLen = Integer.parseInt(MinOligoTextField1.getText());
        int MaxLen = Integer.parseInt(MaxOligoTextField.getText());
        float CostPerBase = Float.parseFloat(CPBTextField.getText());
        float CostPerDegenerateBase =  Float.parseFloat(CPDBTextField.getText()); 
        String organismName =(String)OrganismDropDown.getSelectedItem();
        String alternateAminoFilePath =AAFPURLDisplay.getText();
        String fastaFilePath = URLDisplayTextField.getText();
        
        
        InputVals thisInput = new InputVals(MinTemp, MaxTemp, MinLen, MaxLen, CostPerBase, CostPerDegenerateBase, organismName, alternateAminoFilePath, fastaFilePath);
        
        //String outputMessage =
        ResultsTextArea.setText("Min Temperature: " + thisInput.getMinTemp() + "\r\nMax Temperature" + thisInput.getMaxTemp() + "\r\nMin Length: " + thisInput.getMinLen() + 
                "\r\nMax Length:" + thisInput.getMaxLen() + "\r\nCost per Base:" + thisInput.getCostPerBase() + "\r\nCost per Degenerate Base:" +thisInput.getCostPerDegenerateBase() + "\r\nOrganism Name: " + thisInput.getOrganism() +
                "\r\nAlternate Amino filePath: " + thisInput.getAlternateAminoFilePath() + "\r\nFastaFilePath: " + thisInput.getFastaFilePath()+ "\r\nResults on their way #STANDBY");
        
        //String results = yehudaExecuterCode(InputVals);
        
        //JOptionPane.showMessageDialog(rootPane, outputMessage);
        
        
        
    }//GEN-LAST:event_OKbuttonActionPerformed

    private void RTFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RTFButtonActionPerformed
        /*
        Read Text File Button retrieves text file through File Explorer.
        The file URL is printed in the corresponding text field.
        */
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        URLDisplayTextField.setText(filename);
        try {
            FileReader reader = new FileReader(filename);
            BufferedReader br = new BufferedReader(reader);
            TextField1.read(br, null);
            br.close();
            TextField1.requestFocus();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(OligoWizFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(OligoWizFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RTFButtonActionPerformed

    private void OrganismDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrganismDropDownActionPerformed
        
    }//GEN-LAST:event_OrganismDropDownActionPerformed

    private void TextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField1ActionPerformed

    }//GEN-LAST:event_TextField1ActionPerformed

    private void ClearTxtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearTxtButtonActionPerformed
        // New Button clears all the fields when clicked.
        TextField1.setText("");
        MaxTempTextField.setText("");
        MinTempTextField.setText("");
        CompScoreTextField.setText("");
        URLDisplayTextField.setText("");
        MinOligoTextField1.setText("");
        MaxOligoTextField.setText("");
        CPBTextField.setText("");
        CPDBTextField.setText("");
        CompScoreTextField.setText("");
        jTextField1.setText("");
        TextField2.setText("");
        AAFPURLDisplay.setText("");
        ResultsTextArea.setText("");
    }//GEN-LAST:event_ClearTxtButtonActionPerformed

    private void ExportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportButtonActionPerformed
        //Still working on
        FileWriter write = null;
         try{
        write = new FileWriter (System.getenv("HOMEPATH") + "\\Downloads\\Results.txt");
        ResultsTextArea.write(write);           
    }
    catch (Exception e){
        e.printStackTrace();
    }
    finally{
      if(write != null) 
       try {
           write.close();
      } catch (IOException ex) {
          Logger.getLogger(OligoWizFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
    } 
        
    }//GEN-LAST:event_ExportButtonActionPerformed

    private void MaxTempTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MaxTempTextFieldKeyTyped
        // Only allows digits to be inputted into the text fields. No decimals or letters or symbols.
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MaxTempTextFieldKeyTyped

    private void MinTempTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MinTempTextFieldKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MinTempTextFieldKeyTyped

    private void MaxOligoTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MaxOligoTextFieldKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MaxOligoTextFieldKeyTyped

    private void MinOligoTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MinOligoTextField1KeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MinOligoTextField1KeyTyped

    private void CPBTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPBTextFieldActionPerformed
        
    }//GEN-LAST:event_CPBTextFieldActionPerformed

    private void CPDBTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPDBTextFieldActionPerformed

    }//GEN-LAST:event_CPDBTextFieldActionPerformed

    private void CompScoreTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompScoreTextFieldActionPerformed
        
    }//GEN-LAST:event_CompScoreTextFieldActionPerformed

    private void MinTempTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinTempTextFieldActionPerformed
        
    }//GEN-LAST:event_MinTempTextFieldActionPerformed

    private void MaxTempTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaxTempTextFieldActionPerformed

    }//GEN-LAST:event_MaxTempTextFieldActionPerformed

    private void MinOligoTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinOligoTextField1ActionPerformed

    }//GEN-LAST:event_MinOligoTextField1ActionPerformed

    private void MaxOligoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaxOligoTextFieldActionPerformed

    }//GEN-LAST:event_MaxOligoTextFieldActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void URLDisplayTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_URLDisplayTextFieldActionPerformed
 
    }//GEN-LAST:event_URLDisplayTextFieldActionPerformed

    private void AAFPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAFPButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        AAFPURLDisplay.setText(filename);
        try {
            FileReader reader = new FileReader(filename);
            BufferedReader br = new BufferedReader(reader);
            TextField2.read(br, null);
            br.close();
            TextField2.requestFocus();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(OligoWizFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(OligoWizFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AAFPButtonActionPerformed

    private void CPBTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CPBTextFieldKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_CPBTextFieldKeyTyped

    private void CPDBTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CPDBTextFieldKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_CPDBTextFieldKeyTyped

    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OligoWizFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OligoWizFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OligoWizFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OligoWizFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        JFrame frame = new JFrame();

        frame.add(new JPanel(), BorderLayout.NORTH);

        frame.add(new JScrollpane(), BorderLayout.CENTER);

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new OligoWizFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AAFPButton;
    private javax.swing.JTextField AAFPURLDisplay;
    private javax.swing.JTextField CPBTextField;
    private javax.swing.JTextField CPDBTextField;
    private javax.swing.JButton ClearTxtButton;
    private javax.swing.JTextField CompScoreTextField;
    private javax.swing.JLabel ELabel;
    private javax.swing.JLabel ELabel1;
    private javax.swing.JButton ExportButton;
    private javax.swing.JLabel FASTAfilelabel;
    private javax.swing.JLabel FASTAfilelabel1;
    private javax.swing.JLabel HLabel;
    private javax.swing.JTextField MaxOligoTextField;
    private javax.swing.JTextField MaxTempTextField;
    private javax.swing.JTextField MinOligoTextField1;
    private javax.swing.JTextField MinTempTextField;
    private javax.swing.JButton OKbutton;
    private javax.swing.JComboBox<String> OrganismDropDown;
    private javax.swing.JButton RTFButton;
    private javax.swing.JLabel ResultsLabel;
    private javax.swing.JTextArea ResultsTextArea;
    private javax.swing.JLabel SLabel;
    private javax.swing.JLabel SLabel1;
    private javax.swing.JLabel SelOrganTxtField;
    private javax.swing.JTextField TextField1;
    private javax.swing.JTextField TextField2;
    private javax.swing.JTextField URLDisplayTextField;
    private javax.swing.JLabel copypasteseqlabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    // End of variables declaration//GEN-END:variables

    private static class JScrollpane extends Component {

        public JScrollpane() {
        }
    }

}
